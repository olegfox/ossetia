<?php

namespace Site\MainBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * MediaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MediaRepository extends EntityRepository
{
    public function findAll()
    {
        return $this->findBy(array(), array('created' => 'DESC'));
    }

    public function findAllLimits($limit = 15)
    {
        $allMedia = $this->getEntityManager()->createQuery('
        SELECT m FROM Site\MainBundle\Entity\Media m
        ORDER BY m.created DESC
        ')
            ->setMaxResults($limit)
            ->getResult();

        return $allMedia;
    }

    public function findPhotos()
    {
        $media = $this->getEntityManager()->createQuery('
        SELECT m FROM Site\MainBundle\Entity\Media m
        LEFT JOIN m.video AS video
        WHERE video.id IS NULL
        ORDER BY m.created DESC
        ')
            ->getResult();

        return $media;
    }

    public function findVideos()
    {
        $media = $this->getEntityManager()->createQuery('
        SELECT m FROM Site\MainBundle\Entity\Media m
        LEFT JOIN m.video AS video
        WHERE video.id > 0
        ORDER BY m.created DESC
        ')
            ->getResult();

        return $media;
    }

    public function findLastPhoto()
    {
        $media = $this->getEntityManager()->createQuery('
        SELECT m FROM Site\MainBundle\Entity\Media m
        LEFT JOIN m.video AS video
        WHERE video.id IS NULL
        ORDER BY m.created DESC
        ')
            ->setFirstResult(0)
            ->setMaxResults(1)
            ->getResult();

        return $media;
    }

    public function findLastVideo()
    {
        $media = $this->getEntityManager()->createQuery('
        SELECT m FROM Site\MainBundle\Entity\Media m
        LEFT JOIN m.video AS video
        WHERE video.id > 0
        ORDER BY m.created DESC
        ')
            ->setFirstResult(0)
            ->setMaxResults(1)
            ->getResult();

        return $media;
    }

    public function findAllWithoutSlug($slug, $limit)
    {
        $allMedia = $this->getEntityManager()->createQuery('
        SELECT m FROM Site\MainBundle\Entity\Media m
        WHERE m.created < (SELECT mm.created FROM Site\MainBundle\Entity\Media mm WHERE mm.slug LIKE :slug)
        ORDER BY m.created DESC
        ')
            ->setParameters(array(
                'slug' => $slug
            ))
            ->setMaxResults($limit)
            ->getResult();

        return $allMedia;
    }
}
